#summary Everything for WEAV-CLUSTERING
<wiki:toc max_depth="3" />

= Introduction =

WEAV-CLUSTERING tries to divide a big read set into smaller read set with keeping following features as possible as we can.
  * A clustered read set has not so many genes together. We hope a clustered read set has only one gene.
  * All the isoform of a gene would be in a clustered read set if exist.

||*Definition* Cluster: we will call *a clustered read set* as *a cluster*.||

= Algorithm =

Although we want to keep the above features during clustering, fortunately, this clustering step does not have to be perfect, because the assembly algorithm of WEAV can assemble multiple genes simultaneously.
Thus we propose a naive clustering algorithm as follows.
  # We construct a de Bruijn graph with K-tuples using the whole read set. In this graph, the edges are K-tuples, the nodes are (K-1)-tuples, and the weight of an edge is the number of the K-tuple in the read set.
  # We remove edges with very low weight (i.e., <= 1) to eliminate random edges caused by sequencing errors, and we also remove edges with very high weight (i.e., >= 300) to eliminate edges caused by repetitive sequences. 
  # After edge removal, the graph is fragmented into many disjoint connected components, or subgraphs, which can be identified using the DFS (depth-first-search) algorithm. 
  # For each subgraph, we extract reads from the K-tuple edges and group them into a cluster.


= Config File =

WEAV-CLUSTERING also can use both `config.in` and command line argument like WEAV, and it shares general features with WEAV (please check [http://code.google.com/p/weav-assembler/wiki/Manual WEAV Manual]).


== Summary ==
||Field Name||Default Value||Type||Description||
||FILE_NAME||NO DEFAULT||String||Read set file path.||
||CONSTRUCT_KMER_TABLE||NO DEFAULT||NO VALUE||Yes/No for constructing a graph||
||K||25||Integer||K-mer length in _bp_.||
||DEBUG_FILE||NO DEFAULT||String||Debug message file path.||
||EXIT||NO DEFAULT||NO VALUE||Exit signal||


== Detailed Information ==
===_FILE_NAME_==+
You may specify the read set in FASTA format. *Currently we only allow FASTA format, and reads should not have any invalid bases. WEAV only allows A,G,C and T (NOTE we don't allow a,g,c and t). We will update this feature as soon as possible.*
 After you specify the input read set by this field, following file name will be automatically generated: 
  * '_FILE_NAME_`_`refined' for `refined read set`.
Example:
{{{
3,AAAAATAGGTCATCAAAAGGAAAAAAAATAACTTTGATTAACTAGTGTTAAACAAAAAATAGGTTTACTAAATATGTTAATCTATTCTTTTAACATAAGC
1,AAAACAGTTCCCTAAGTTCAACTTTGTGGGGAAACTTTTGGGTCCACGTGGCAATTCTCTGAAGCGTTTACAAGAAGAAACCTTGACAAAAATGTCAATC
3,AAAACAGTTCCCTAAGTTCAACTTTGTGGGGAAACTTTTGGGTCCACGTGGCAATTCTCTGAAGCGTTTACAAGAAGAAACCTTGACAAAAATGTCCATC
...
}}}
This means the first read has 3 copies in the read set, the second has 1 copy, and so on.
These three files you can find in the directory where the read set is. *But there are several volatile files which would not be if WEAV is terminated normally, but would be if WEAV is terminated abnormally.* The volatile files are as follows.
===CONSTRUCT_KMER_TABLE===
If this field name is commented out, it means *_do not construct K-mer table, but clustering the graph and read set_*. If this field name is in the contig.in, it means *_construct K-mer table_*.
===_K_===
K-mer length which is a sequence length of an edge.
===_DEBUG_FILE_===
Not many information would be printed in terminal, and detailed information would be saved in this file.
===_EXIT_===
WEAV-CLUSTERING stops to read parameters after _EXIT_.