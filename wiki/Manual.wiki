#summary General User Guide.
If you have any question, please send an email to Sungje Cho (sungjech@usc.edu) including any kind of error messages and input/output files if possible.

== Introduction ==

WEAV uses config.in file to set parameters, input and output files. However, it also allows you to use arguments list for your convenience. For example, you may specify K-mer length (`K=35`), debug message file name (`DEBUG_FILE=./debug_message/test`), maximum length (`MAX_LEN=10000`), and so on. You want to keep all the other parameters but want to change K-mer length to 50. Then, you can use command line to change the parameter.

{{{
./weav K=50
}}}

Or, if config.in file has everything you want, just type it as follows.

{{{
./weav
}}}

You can type what ever parameters like,

{{{
./weav K= 50 FILE_NAME=./data/test_file DEBUG_FILE=./debug_message/debug_test
}}}

See `Config File` for explanation about each field name.

== Definitions ==

||read set||This is a file having reads (a.k.a. fragments) from a target sequence you want to reconstruct. *Currently, we only allow FASTA format and all the bases should be A, G, C or T (not a, g, c or t).*||
||contig||This is a reconstructed sequence using the read set you've specified.||
||template sequence||WEAV may have many candidate sequences to be contig. This is different point from the other de Bruijn assemblers. Because they don't travel the graph and they produced sequences of super-edges or super-node, they can say all the sequences may be correct. However, WEAV explicitly _travels_ the graph. So, there might be chimeric sequences, there might be many similar sequences, and so on. Therefore, WEAV produces _template sequences_ first (although the naming is not appropriate), and then tries to select some of them as _contig_. *However, what we _estimate_ which one would be contig means it can be wrong. So, you can think template sequences includes full information about the WEAV assembly.*||
||super edge||WEAV uses _super edge_; that is, WEAV tries to simplify a simple path without branch in the middle to a super edge.||

== Config File ==

WEAV assumes `config.in` in the directory where WEAV is working. So, even if you want to use command line arguments, you should have a config.in file in the directory. You can find the config.in file from the package you can download from [http://code.google.com/p/weav-assembler/downloads/list Downloads].

Basically, most of field names get a value followed by `=` like `K=35`. And, the full list is following. *_Note: If you find any field name in the config.in, please ignore them. We will either update the information in this manual or delete the field from the config.in in the next update._*

Short summary is in the following table and the detailed information will follow the table.

=== Summary ===
||Field Name||Default Value||Type||Description||
||FILE_NAME||NO DEFAULT||String||Read set file path.||
||K||25||Integer||K-mer length in _bp_.||
||INIT_LAYER||200||Integer||Initial layer size in _bp_.||
||INTER_LAYER||200||Integer||Internal layer size in _bp_.||
||MAX_LEN||0xFFFFFFFF||Integer||Maximum allowed contig length in _bp_.||
||MIN_LEN||0||Integer||Minumum allowed contig length in _bp_.||
||MAX_NUM_TEMP||10000||Integer||Maximum allowed number of template sequence.||
||DEBUG_FILE||NO DEFAULT||String||Debug message file path.||
||MISMATCHES||4||Integer||Number of mismatches allowed||
||MEMORY_LIMIT||1024||Maximum memory you allow in _MB_||
||EXIT||NO DEFAULT||NO VALUE||Exit signal||

=== Detailed Information ===

====FILE_NAME====
You may specify the read set in FASTA format. *Currently we only allow FASTA format, and reads should not have any invalid bases. WEAV only allows A,G,C and T (NOTE we don't allow a,g,c and t). We will update this feature as soon as possible.* After you specify the input read set by this field, following file names will be automatically generated: 
  * _FILE_NAME_`_`template for _template sequences_
  * _FILE_NAME_`_`contig for _contigs_
  * _FILE_NAME_`_`refined for `refined read set`.
These three files you can find in the directory where the read set is. *But there are several volatile files which would not be if WEAV is terminated normally, but would be if WEAV is terminated abnormally. The volatile files are as follows.
  * _FILE_NAME_`_`super_edge for _super edges_; actually this file
====K====
K-mer length which is a sequence length of an edge. Surely, after constructing super-edge, the super-edge may have longer than _Kbp_ in length.
====INIT_LAYER====
If partition-ligation method is required, WEAV would partition the graph into several layers. This is the size of initial layer in _bp_.
====INTER_LAYER====
Along with `INIT_LAYER`, this specify the size of layers except `INIT_LAYER`.
====MAX_LEN====
The maximum allowed contig length. If the graph is very complex, the longer is not a good choice. If you can, the best estimated target sequence length would be the best which reduce the running time.
====MIN_LEN====
Actually, WEAV doesn't produce any contig which is shorter than the edge length (K-mer), so the default would be _K_. However, you can specify this value to say



