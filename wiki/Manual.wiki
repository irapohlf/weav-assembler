#summary One-sentence summary of this page.
If you have any question, please send an email to Sungje Cho (sungjech@usc.edu) including any kind of error messages and input/output files if possible.

== Introduction ==

WEAV uses config.in file to set parameters, input and output files. However, it also allows you to use arguments list for your convenience. For example, you may specify K-mer length (`K=35`), debug message file name (`DEBUG_FILE=./debug_message/test`), maximum length (`MAX_LEN=10000`), and so on. You want to keep all the other parameters but want to change K-mer length to 50. Then, you can use command line to change the parameter.

{{{
./weav K=50
}}}

Or, if config.in file has everything you want, just type it as follows.

{{{
./weav
}}}

You can type what ever parameters like,

{{{
./weav K= 50 FILE_NAME=./data/test_file DEBUG_FILE=./debug_message/debug_test
}}}

See `Config File` for explanation about each field name.

== Definitions ==

||read set||This is a file having reads (a.k.a. fragments) from a target sequence you want to reconstruct. *Currently, we only allow FASTA format and all the bases should be A, G, C or T (not a, g, c or t).*||
||contig||This is a reconstructed sequence using the read set you've specified.||
||template sequence||WEAV may have many candidate sequences to be contig. This is different point from the other de Bruijn assemblers. Because they don't travel the graph and they produced sequences of super-edges or super-node, they can say all the sequences may be correct. However, WEAV explicitly _travels_ the graph. So, there might be chimeric sequences, there might be many similar sequences, and so on. Therefore, WEAV produces _template sequences_ first (although the naming is not appropriate), and then tries to select some of them as _contig_. *However, what we _estimate_ which one would be contig means it can be wrong. So, you can think template sequences includes full information about the WEAV assembly.*||

== Config File ==

WEAV assumes `config.in` in the directory where WEAV is working. So, even if you want to use command line arguments, you should have a config.in file in the directory. You can find the config.in file from the package you can download from [http://code.google.com/p/weav-assembler/downloads/list Downloads].

Basically, most of field names get a value followed by `=` like `K=35`. And, the full list is following.

||FILE_NAME||NO DEFAULT||You may specify the read set in FASTA format. *Currently we only allow FASTA format, and reads should not have any invalid bases. WEAV only allows A,G,C and T (NOTE we don't allow a,g,c and t). We will update this feature as soon as possible.* After you specify the input read set by this field, following file names will be automatically generated: _FILE_NAME__template for _template sequences_||
#REFINED_READS
READ_LEN=100
K=35
INIT_LAYER=2500
INTER_LAYER=2500
MAX_LEN=10000
MIN_LEN=101
MAX_NUM_TEMP=100000
SIM=9000
DEBUG_FILE=./debug_message/s_short.fa
MISMATCHES=10
MEMORY_LIMIT=9000
EXIT